Date: Mon, 11 Oct 2021 16:26:39 -0500 (CDT)
Message-ID: <583277365.2750.1633987599997@EASMN203V.uncle_bob.com>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2749_836638962.1633987599982"

------=_Part_2749_836638962.1633987599982
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Keywords - Best Practices</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>Keywords - Best Practices</h1>
    <div class=3D"Section1">
        <div style=3D"display: none;">
<h2 id=3D"KeywordsBestPractices-KeywordNames">Keyword Names</h2>
<ul>
<li>Standard practice for keyword names is to capitalize each word of the k=
eyword
<ul>
<li><h2 id=3D"KeywordsBestPractices-KeywordNames.1">Keyword Names</h2>
<ul>
<li>Standard practice for keyword names is to capitalize each word of the k=
eyword
<ul>
<li><h2 id=3D"KeywordsBestPractices-KeywordNames.2">Keyword Names</h2>
<ul>
<li>Standard practice for keyword names is to capitalize each word of the k=
eyword
<ul>
<li><h2 id=3D"KeywordsBestPractices-KeywordNames.3">Keyword Names</h2>
<ul>
<li>Standard practice for keyword names is to capitalize each word of the k=
eyword
<ul>
<li><p>GOOD:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>GOOD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Enter "=
Email Address" In The Misc Details Section</pre>=20
</div>
</div></li>
<li>BAD:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>BAD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">get val=
ue from the field</pre>=20
</div>
</div></li>
</ul></li>
<li>Use the What-Where naming strategy for keywords and be specific:
<ul>
<li>What Are You Doing?</li>
<li>Where Are You Doing It?</li>
<li><p>EXAMPLE:&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Good Keyword</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Get&nbs=
p;Value&nbsp;Of&nbsp;The&nbsp;"Distance"&nbsp;Field&nbsp;In&nbsp;The&nbsp;M=
isc&nbsp;Details&nbsp;Section</pre>=20
</div>
</div></li>
</ul></li>
<li>Notice that when a field name is mentioned double quotes are added</li>
<li>While inline arguments are possible in RF, typically they create issues=
 with intelli-sense and should be used sparingly.</li>
</ul></li>
<li><p>GOOD:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>GOOD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Enter "=
Email Address" In The Misc Details Section</pre>=20
</div>
</div></li>
<li>BAD:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>BAD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">get val=
ue from the field</pre>=20
</div>
</div></li>
</ul></li>
<li>Use the What-Where naming strategy for keywords and be specific:
<ul>
<li>What Are You Doing?</li>
<li>Where Are You Doing It?</li>
<li><p>EXAMPLE:&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Good Keyword</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Get&nbs=
p;Value&nbsp;Of&nbsp;The&nbsp;"Distance"&nbsp;Field&nbsp;In&nbsp;The&nbsp;M=
isc&nbsp;Details&nbsp;Section</pre>=20
</div>
</div></li>
</ul></li>
<li>Notice that when a field name is mentioned double quotes are added</li>
<li>While inline arguments are possible in RF, typically they create issues=
 with intelli-sense and should be used sparingly.</li>
</ul></li>
<li><p>GOOD:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>GOOD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Enter "=
Email Address" In The Misc Details Section</pre>=20
</div>
</div></li>
<li>BAD:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>BAD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">get val=
ue from the field</pre>=20
</div>
</div></li>
</ul></li>
<li>Use the What-Where naming strategy for keywords and be specific:
<ul>
<li>What Are You Doing?</li>
<li>Where Are You Doing It?</li>
<li><p>EXAMPLE:&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Good Keyword</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Get&nbs=
p;Value&nbsp;Of&nbsp;The&nbsp;"Distance"&nbsp;Field&nbsp;In&nbsp;The&nbsp;M=
isc&nbsp;Details&nbsp;Section</pre>=20
</div>
</div></li>
</ul></li>
<li>Notice that when a field name is mentioned double quotes are added</li>
<li>While inline arguments are possible in RF, typically they create issues=
 with intelli-sense and should be used sparingly.</li>
</ul><h2 id=3D"KeywordsBestPractices-KeywordComplexityAndResourceFileLevels=
">Keyword Complexity And Resource File Levels</h2>
<ul>
<li>Keywords ideally should be no more than two levels deep.</li>
<li>The First level of a keyword should be basic references to imported lib=
raries and basic singular functionality- Page Objects, Utilities, Common Fu=
nctions, etc ...</li>
<li>The Second level should be where business logic pulls in the elements f=
rom the First level</li>
<li><strong>Tests Cannot Reference Other Tests!</strong></li>
<li>Unless there is a specific reason, do not "over-wrap" keywords.
<ul>
<li><p>This is redundant and adds no value:<em><br></em></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Redundant, No Value</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Text Sh=
ould Contain Value
  [Arguments] ${actual_text} ${expected_text}
  Should Contain ${actual_text} ${expected_text}</pre>=20
</div>
</div></li>
<li>Just Use:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>To The Point</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Should =
Contain ${actual_text} ${expected_text}</pre>=20
</div>
</div></li>
</ul></li>
</ul><h2 id=3D"KeywordsBestPractices-KeywordNames.4">Keyword Names</h2>
<ul>
<li>Standard practice for keyword names is to capitalize each word of the k=
eyword
<ul>
<li><p>GOOD:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>GOOD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Enter "=
Email Address" In The Misc Details Section</pre>=20
</div>
</div></li>
<li>BAD:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>BAD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">get val=
ue from the field</pre>=20
</div>
</div></li>
</ul></li>
<li>Use the What-Where naming strategy for keywords and be specific:
<ul>
<li>What Are You Doing?</li>
<li>Where Are You Doing It?</li>
<li><p>EXAMPLE:&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Good Keyword</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Get&nbs=
p;Value&nbsp;Of&nbsp;The&nbsp;"Distance"&nbsp;Field&nbsp;In&nbsp;The&nbsp;M=
isc&nbsp;Details&nbsp;Section</pre>=20
</div>
</div></li>
</ul></li>
<li>Notice that when a field name is mentioned double quotes are added</li>
<li>While inline arguments are possible in RF, typically they create issues=
 with intelli-sense and should be used sparingly.</li>
</ul><h2 id=3D"KeywordsBestPractices-KeywordComplexityAndResourceFileLevels=
.1">Keyword Complexity And Resource File Levels</h2>
<ul>
<li>Keywords ideally should be no more than two levels deep.</li>
<li>The First level of a keyword should be basic references to imported lib=
raries and basic singular functionality- Page Objects, Utilities, Common Fu=
nctions, etc ...</li>
<li>The Second level should be where business logic pulls in the elements f=
rom the First level</li>
<li><strong>Tests Cannot Reference Other Tests!</strong></li>
<li>Unless there is a specific reason, do not "over-wrap" keywords.
<ul>
<li><p>This is redundant and adds no value:<em><br></em></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Redundant, No Value</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Text Sh=
ould Contain Value
  [Arguments] ${actual_text} ${expected_text}
  Should Contain ${actual_text} ${expected_text}</pre>=20
</div>
</div></li>
<li>Just Use:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>To The Point</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Should =
Contain ${actual_text} ${expected_text}</pre>=20
</div>
</div></li>
</ul></li>
</ul><p><br></p><p>GOOD:<br><strong>GOOD:</strong></p>
<div class=3D"table-wrap">
<table class=3D"wrapped confluenceTable" style=3D"text-align: left;">
<tbody style=3D"text-align: left;">
<tr style=3D"text-align: left;">
<td style=3D"text-align: left;" class=3D"confluenceTd"><p style=3D"text-ali=
gn: left;"><code class=3D"text plain" style=3D"text-align: left;">Enter "Em=
ail Address" In The Misc Details Section</code></p></td>
</tr>
</tbody>
</table>
</div></li>
<li>BAD:<p><br><br><strong>BAD:</strong></p>
<div class=3D"table-wrap">
<table class=3D"wrapped confluenceTable" style=3D"text-align: left;">
<tbody style=3D"text-align: left;">
<tr style=3D"text-align: left;">
<td style=3D"text-align: left;" class=3D"confluenceTd"><p style=3D"text-ali=
gn: left;"><code class=3D"text plain" style=3D"text-align: left;">get value=
 from the field</code></p></td>
</tr>
</tbody>
</table>
</div></li>
</ul></li>
<li>Use the What-Where naming strategy for keywords and be specific:
<ul>
<li>What Are You Doing?</li>
<li>Where Are You Doing It?</li>
<li><p>EXAMPLE:&nbsp;<br><strong>Good Keyword</strong></p>
<div class=3D"table-wrap">
<table class=3D"wrapped confluenceTable" style=3D"text-align: left;">
<tbody style=3D"text-align: left;">
<tr style=3D"text-align: left;">
<td style=3D"text-align: left;" class=3D"confluenceTd"><p style=3D"text-ali=
gn: left;"><code class=3D"text plain" style=3D"text-align: left;">Get&nbsp;=
Value&nbsp;Of&nbsp;The&nbsp;"Distance"&nbsp;Field&nbsp;In&nbsp;The&nbsp;Mis=
c&nbsp;Details&nbsp;Section</code></p></td>
</tr>
</tbody>
</table>
</div></li>
</ul></li>
<li>Notice that when a field name is mentioned double quotes are added</li>
<li>While inline arguments are possible in RF, typically they create issues=
 with intelli-sense and should be used sparingly.</li>
</ul>
<h2 id=3D"KeywordsBestPractices-KeywordComplexityAndResourceFileLevels.2">K=
eyword Complexity And Resource File Levels</h2>
<ul>
<li>Keywords ideally should be no more than two levels deep.</li>
<li>The First level of a keyword should be basic references to imported lib=
raries and basic singular functionality- Page Objects, Utilities, Common Fu=
nctions, etc ...</li>
<li>The Second level should be where business logic pulls in the elements f=
rom the First level</li>
<li><strong>Tests Cannot Reference Other Tests!</strong></li>
<li>Unless there is a specific reason, do not "over-wrap" keywords.
<ul>
<li><p>This is redundant and adds no value:<em><br></em><br><strong>Redunda=
nt, No Value</strong></p>
<div class=3D"table-wrap">
<table class=3D"wrapped confluenceTable" style=3D"text-align: left;">
<tbody style=3D"text-align: left;">
<tr style=3D"text-align: left;">
<td style=3D"text-align: left;" class=3D"confluenceTd"><p style=3D"text-ali=
gn: left;"><code class=3D"text plain" style=3D"text-align: left;">Text Shou=
ld Contain Value</code><br><code class=3D"text spaces" style=3D"text-align:=
 left;">&nbsp;&nbsp;</code><code class=3D"text plain" style=3D"text-align: =
left;">[Arguments] ${actual_text} ${expected_text}</code><br><code class=3D=
"text spaces" style=3D"text-align: left;">&nbsp;&nbsp;</code><code class=3D=
"text plain" style=3D"text-align: left;">Should Contain ${actual_text} ${ex=
pected_text}</code></p></td>
</tr>
</tbody>
</table>
</div></li>
<li>Just Use:<p><br><br><strong>To The Point</strong></p>
<div class=3D"table-wrap">
<table class=3D"wrapped confluenceTable" style=3D"text-align: left;">
<tbody style=3D"text-align: left;">
<tr style=3D"text-align: left;">
<td style=3D"text-align: left;" class=3D"confluenceTd"><p style=3D"text-ali=
gn: left;"><code class=3D"text plain" style=3D"text-align: left;">Should Co=
ntain ${actual_text} ${expected_text}</code></p></td>
</tr>
</tbody>
</table>
</div></li>
</ul></li>
</ul>
<p><br></p>
<h4 id=3D"KeywordsBestPractices-RobotFrameworkResourceFileRelationships">Ro=
bot Framework Resource File Relationships</h4>
</div>
<h2 id=3D"KeywordsBestPractices-KeywordNames.5">Keyword Names</h2>
<ul>
<li>Standard practice for keyword names is to capitalize each word of the k=
eyword
<ul>
<li><p>GOOD:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>GOOD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Enter "=
Email Address" In The Misc Details Section</pre>=20
</div>
</div></li>
<li>BAD:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>BAD:</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">get val=
ue from the field</pre>=20
</div>
</div></li>
</ul></li>
<li>Use the What-Where naming strategy for keywords and be specific:
<ul>
<li>What Are You Doing?</li>
<li>Where Are You Doing It?</li>
<li><p>EXAMPLE:&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Good Keyword</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Get&nbs=
p;Value&nbsp;Of&nbsp;The&nbsp;"Distance"&nbsp;Field&nbsp;In&nbsp;The&nbsp;M=
isc&nbsp;Details&nbsp;Section</pre>=20
</div>
</div></li>
</ul></li>
<li>Notice that when a field name is mentioned double quotes are added</li>
<li>While inline arguments are possible in RF, typically they create issues=
 with intelli-sense and should be used sparingly.</li>
<li>If point of view is important to the test case then always use third pe=
rson. i.e. As A User, As An Admin, etc ...</li>
</ul>
<h2 id=3D"KeywordsBestPractices-KeywordComplexityAndResourceFileLevels.3">K=
eyword Complexity And Resource File Levels</h2>
<ul>
<li>Keywords ideally should be no more than two levels deep.</li>
<li>The First level of a keyword should be basic references to imported lib=
raries and basic singular functionality- Page Objects, Utilities, Common Fu=
nctions, etc ...</li>
<li>The Second level should be where business logic pulls in the elements f=
rom the First level</li>
<li><strong>Tests Cannot Reference Other Tests!</strong></li>
<li>Unless there is a specific reason, do not "over-abstract" keywords.
<ul>
<li><p>This is redundant and adds no value:<em><br></em></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Redundant, No Value</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Text Sh=
ould Contain Value
  [Arguments] ${actual_text} ${expected_text}
  Should Contain ${actual_text} ${expected_text}</pre>=20
</div>
</div></li>
<li>Just Use:<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>To The Point</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: text; gutter: false; theme: Confluence" data-theme=3D"Confluence">Should =
Contain ${actual_text} ${expected_text}</pre>=20
</div>
</div></li>
</ul></li>
</ul>
<p><br></p>
    </div>
</body>
</html>
------=_Part_2749_836638962.1633987599982--
